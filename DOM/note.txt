1. javascript由三部分组成
    1) ECMAScript(javascript核心标准, 也是一个解析器)
    2) DOM(通过document提供的方法或者属性来操作页面)
    3) BOM(通过window提供的方法或者属性来操作浏览器)

2. DOM document object model （文档对象模型）
    document提供了一些API,赋予开发者操作页面的能力

3. nodeType 节点的类型:
    1)元素节点：nodeType = 1;
    2)document: nodeType = 9;
    3)文本节点： nodeType = 3;
    4)注释节点： nodeType = 8;
    5)属性节点： nodeType = 2;

4. childNodes: 获取某个节点下的所有子节
   children: 获取某个节点下的元素节点

5. nodeValue: 查看节点的属性值

6. nodeName: 查看节点的属性名

7. transition: 完成过渡效果需要多少秒或毫秒

8. 不是标准的属性、但是所有的浏览器都支持； 找到某个元素下的所有元素的子节点

9. parentNode: 查找某个元素的父节点

10. nextElementSibling 找到某个元素的下一个兄弟节点
    previousElementSibling  找到某个元素的上一个兄弟节点
    firstElementChild    找到某个元素下的第一个子元素
    lastElementChild     找到某个元素下的最后一个子元素

11. node.offsetParent 最近的有定位属性的祖先节点
    node.offsetLeft/node.offsetTop 最近的有定位属性的祖先节点的距离（该元素的外边框到有定位的父级的内边框的距离）（eg. 实用的文字提示层）
    node.getBoundingClientRect()  获取元素的盒模型信息 返回值为一个对象 left top bottom right width height 相对于浏览器可视区域 (eg. 实用的文字提示层)
    获取的值是会根据滚动条变化的。


12. node.offsetParent 这个元素的祖先节点中没有定位 该元素的offsetParent是body

13. 未知length的循环 建议使用while

14. 获取元素行间的属性  getAttribute  elem.getAttribute('key')
    设置元素的行间属性  setAttribute  elem.setAttribute('key', 'value');
    删除元素的行间属性  removeAttribute  elem.removeAttribute('key');

15. 获取元素的宽高(支持padding,不支持margin)
        elem.clientWidth/elem.clientHeight  不计算边框
        elem.offsetWidth/elem.offsetHeight  计算边框

16. 可视区的尺寸
        可视区的宽  document.documentElement.clientWidth
        可视区的高  document.documentElement.clientHeight

17. 元素居中
        元素的left = (document.documentElement.clientWidth - 元素.offsetWidth) / 2 + 'px';
        元素的top = (document.documentElement.clientTop - 元素.offsetHeight) / 2 + 'px';

18. document.createElement('元素名称')  创建一个元素
    parentNode(父级元素).appendChild(childNode'要插入的元素')  插入元素(向父级末尾添加元素)
    parentNode.insertBefore(childNode1, childNode2)  往一个节点的指定子节点前插入一个节点  childNode1插入到childNode2前面
    如果第二个参数为假的（undefined）,会将元素添加到父元素的末尾
    parentNode.removeChild('指定的节点')
    parentNode.replaceChild(node, childNode) node用来替换的节点 childNode被替换的子节点 两个参数都是必填

19. node.cloneNode(boolean) 克隆一个节点  事件不会被克隆的
    true: 克隆元素和元素包含的子孙节点
    false: 克隆元素但不包含元素的子孙节点(默认false)

20. appendChild/insertBefore/replaceChild在操作一个已有元素时，是将已有的额元素移动，而不是复制一份进行操作

21. 操作表格
    table.tHead   获取表格头部
    table.rows[n] 获取表格的第n行
    table.tFoot   获取表格底部
    table.tBodies 获取表格主体  获取到的是一个集合
    tBodies[n].rows/tHead.rows/tFoot.rows  表格的行=>tr
    rows[n].cells => 单元格 => td


22. 遍历json中的一项的方法  for(var attr in data[i]) {}

23. tr只能插入td 不能插入其他元素 否则浏览器会过滤掉